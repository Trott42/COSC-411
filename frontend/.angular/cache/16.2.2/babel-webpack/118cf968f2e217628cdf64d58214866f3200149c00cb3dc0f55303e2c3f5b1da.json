{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst BASE_URL = ['http://localhost:8080/'];\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n  }\n  login(loginRequest) {\n    return this.http.post(BASE_URL + \"authenticate\", loginRequest);\n  }\n  signup(signupRequest) {\n    return this.http.post(BASE_URL + \"sign-up\", signupRequest);\n  }\n  createOrder(createOrderRequest) {\n    return this.http.post(BASE_URL + \"create-order\", createOrderRequest);\n  }\n  getOrder(getOrderRequest) {\n    const params = {\n      email: getOrderRequest.email,\n      orderNumber: getOrderRequest.orderNumber\n    };\n    return this.http.get(BASE_URL + \"get-order\", {\n      params\n    });\n  }\n  createAuthorizationHeader() {\n    const jwtToken = localStorage.getItem('JWT');\n    if (jwtToken) {\n      return new HttpHeaders().set('Authorization', 'Bearer ' + jwtToken);\n    } else {\n      console.log(\"JWT token not found in the Local Storage\");\n    }\n    return null;\n  }\n}\n_class = UserService;\n_class.ɵfac = function UserService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","BASE_URL","UserService","constructor","http","login","loginRequest","post","signup","signupRequest","createOrder","createOrderRequest","getOrder","getOrderRequest","params","email","orderNumber","get","createAuthorizationHeader","jwtToken","localStorage","getItem","set","console","log","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/mymint/Documents/COSC-411/frontend/src/app/service/user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CreateAccount } from '../model/user/CreateAccount';\nconst BASE_URL = ['http://localhost:8080/']\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n  login(loginRequest: any): Observable<any> {\n    return this.http.post(BASE_URL + \"authenticate\", loginRequest)\n  }\n\n  signup(signupRequest: any): Observable<any> {\n    return this.http.post(BASE_URL + \"sign-up\", signupRequest)\n  }\n\n  createOrder(createOrderRequest: any): Observable<any> {\n    return this.http.post(BASE_URL + \"create-order\", createOrderRequest)\n  }\n  getOrder(getOrderRequest: any): Observable<any> {\n    const params = {\n      email: getOrderRequest.email,\n      orderNumber: getOrderRequest.orderNumber\n    };\n    return this.http.get(BASE_URL + \"get-order\", {params});\n  }\n  private createAuthorizationHeader() {\n    const jwtToken = localStorage.getItem('JWT');\n    if (jwtToken) {\n      return new HttpHeaders().set(\n        'Authorization', 'Bearer ' + jwtToken\n      )\n    } else {\n      console.log(\"JWT token not found in the Local Storage\");\n    }\n    return null;\n  }\n}\n"],"mappings":";AACA,SAAoBA,WAAW,QAAQ,sBAAsB;;;AAG7D,MAAMC,QAAQ,GAAG,CAAC,wBAAwB,CAAC;AAI3C,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EACxCC,KAAKA,CAACC,YAAiB;IACrB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAACN,QAAQ,GAAG,cAAc,EAAEK,YAAY,CAAC;EAChE;EAEAE,MAAMA,CAACC,aAAkB;IACvB,OAAO,IAAI,CAACL,IAAI,CAACG,IAAI,CAACN,QAAQ,GAAG,SAAS,EAAEQ,aAAa,CAAC;EAC5D;EAEAC,WAAWA,CAACC,kBAAuB;IACjC,OAAO,IAAI,CAACP,IAAI,CAACG,IAAI,CAACN,QAAQ,GAAG,cAAc,EAAEU,kBAAkB,CAAC;EACtE;EACAC,QAAQA,CAACC,eAAoB;IAC3B,MAAMC,MAAM,GAAG;MACbC,KAAK,EAAEF,eAAe,CAACE,KAAK;MAC5BC,WAAW,EAAEH,eAAe,CAACG;KAC9B;IACD,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAChB,QAAQ,GAAG,WAAW,EAAE;MAACa;IAAM,CAAC,CAAC;EACxD;EACQI,yBAAyBA,CAAA;IAC/B,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;IAC5C,IAAIF,QAAQ,EAAE;MACZ,OAAO,IAAInB,WAAW,EAAE,CAACsB,GAAG,CAC1B,eAAe,EAAE,SAAS,GAAGH,QAAQ,CACtC;KACF,MAAM;MACLI,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;;IAEzD,OAAO,IAAI;EACb;;SA/BWtB,WAAW;;mBAAXA,MAAW,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAX1B,MAAW;EAAA2B,OAAA,EAAX3B,MAAW,CAAA4B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}