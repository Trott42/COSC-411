{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport { CreateAccount } from 'src/app/model/user/CreateAccount';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/service/user.service\";\nexport class LoginComponent {\n  constructor(formBuilder, route, router, userService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.userService = userService;\n    this.loading = false;\n    this.submitted = false;\n    this.email = \"\";\n    this.password = \"\";\n    this.value = \"\";\n    this.account2 = new CreateAccount();\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n    localStorage.setItem(\"ACCOUNT\", \"\");\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.form.controls;\n  }\n  onClickSubmit() {\n    this.account2.email = this.email;\n    this.account2.password = this.password;\n    this.userService.login(this.account2).subscribe(response => {\n      if (response.jwtToken) {\n        const jwtToken = response.jwtToken;\n        localStorage.setItem('JWT', jwtToken);\n        localStorage.setItem('EMAIL', this.email);\n        this.router.navigateByUrl('/order-dashboard');\n      }\n    });\n    this.value = \"Email or Password is invalid\";\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"ng-component\"]],\n  decls: 23,\n  vars: 3,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [1, \"container\"], [1, \"fw-bold\", \"mb-4\"], [\"type\", \"text\", \"placeholder\", \"Email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [2, \"color\", \"red\"], [1, \"mt-3\"], [\"routerLink\", \"/sign-up\"], [\"routerLink\", \"/dashboard\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n      i0.ɵɵelementStart(4, \"title\");\n      i0.ɵɵtext(5, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"body\")(7, \"div\", 3)(8, \"h2\", 4);\n      i0.ɵɵtext(9, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_12_listener() {\n        return ctx.onClickSubmit();\n      });\n      i0.ɵɵtext(13, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"p\", 8);\n      i0.ɵɵtext(15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"p\", 9);\n      i0.ɵɵtext(17, \"Don't have an account? \");\n      i0.ɵɵelementStart(18, \"a\", 10);\n      i0.ɵɵtext(19, \"Sign Up\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"p\", 9)(21, \"a\", 11);\n      i0.ɵɵtext(22, \"Back to Dashboard\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.value);\n    }\n  },\n  dependencies: [i2.RouterLink, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel],\n  styles: [\"body[_ngcontent-%COMP%] {\\n            font-family: Arial, sans-serif;\\n            background: linear-gradient(to bottom, #6C63FF, #1E90FF);\\n            margin: 0;\\n            padding: 0;\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n            min-height: 100vh;\\n        }\\n        \\n        .container[_ngcontent-%COMP%] {\\n            background-color: rgba(255, 255, 255, 0.9);\\n            border-radius: 10px;\\n            padding: 20px;\\n            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\\n            text-align: center;\\n            max-width: 400px;\\n        }\\n        \\n        h2[_ngcontent-%COMP%] {\\n            font-size: 28px;\\n            color: #007BFF;\\n        }\\n        \\n        .form-control[_ngcontent-%COMP%] {\\n            margin-bottom: 20px;\\n            padding: 10px;\\n            border: 1px solid #ddd;\\n            border-radius: 5px;\\n            width: 100%;\\n        }\\n        \\n        .btn-primary[_ngcontent-%COMP%] {\\n            background-color: #007BFF;\\n            color: #fff;\\n            border: none;\\n            border-radius: 5px;\\n            padding: 10px 20px;\\n            font-size: 16px;\\n            width: 100%;\\n        }\\n        \\n        .btn-primary[_ngcontent-%COMP%]:hover {\\n            background-color: #0056b3;\\n        }\\n        \\n        a[_ngcontent-%COMP%] {\\n            text-decoration: none;\\n            color: #007BFF;\\n        }\"]\n});","map":{"version":3,"names":["Validators","CreateAccount","LoginComponent","constructor","formBuilder","route","router","userService","loading","submitted","email","password","value","account2","ngOnInit","form","group","username","required","localStorage","setItem","f","controls","onClickSubmit","login","subscribe","response","jwtToken","navigateByUrl","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","ActivatedRoute","Router","i3","UserService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_input_ngModelChange_10_listener","$event","LoginComponent_Template_input_ngModelChange_11_listener","LoginComponent_Template_button_click_12_listener","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate"],"sources":["/home/mymint/Documents/COSC-411/frontend/src/app/comp/login/login.component.ts","/home/mymint/Documents/COSC-411/frontend/src/app/comp/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { UserService } from 'src/app/service/user.service';\nimport { CreateAccount } from 'src/app/model/user/CreateAccount';\n\n@Component({ templateUrl: 'login.component.html' })\nexport class LoginComponent implements OnInit {\n    form!: FormGroup;\n    loading = false;\n    submitted = false;\n    email:string=\"\";\n    password:string=\"\";\n    value=\"\";\n    public account: CreateAccount[] | undefined; \n    public account2: CreateAccount = new CreateAccount; \n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private userService: UserService\n    ) { }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n        localStorage.setItem(\"ACCOUNT\",\"\");\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onClickSubmit():void {\n        this.account2.email=this.email!;\n        this.account2.password=this.password!;\n        this.userService.login(this.account2).subscribe((response) => {\n            if (response.jwtToken) {\n              const jwtToken = response.jwtToken;\n              localStorage.setItem('JWT', jwtToken);\n              localStorage.setItem('EMAIL',this.email);\n              this.router.navigateByUrl('/order-dashboard');\n            }\n            \n          })\n        this.value=\"Email or Password is invalid\";\n        \n    }\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Login</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            background: linear-gradient(to bottom, #6C63FF, #1E90FF);\n            margin: 0;\n            padding: 0;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-height: 100vh;\n        }\n        \n        .container {\n            background-color: rgba(255, 255, 255, 0.9);\n            border-radius: 10px;\n            padding: 20px;\n            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n            text-align: center;\n            max-width: 400px;\n        }\n        \n        h2 {\n            font-size: 28px;\n            color: #007BFF;\n        }\n        \n        .form-control {\n            margin-bottom: 20px;\n            padding: 10px;\n            border: 1px solid #ddd;\n            border-radius: 5px;\n            width: 100%;\n        }\n        \n        .btn-primary {\n            background-color: #007BFF;\n            color: #fff;\n            border: none;\n            border-radius: 5px;\n            padding: 10px 20px;\n            font-size: 16px;\n            width: 100%;\n        }\n        \n        .btn-primary:hover {\n            background-color: #0056b3;\n        }\n        \n        a {\n            text-decoration: none;\n            color: #007BFF;\n        }\n    </style>\n</head>\n\n<body>\n    <div class=\"container\">\n        <h2 class=\"fw-bold mb-4\">Login</h2>\n        <input type=\"text\" [(ngModel)]=\"email\"  class=\"form-control\" placeholder=\"Email\">\n        <input type=\"password\" [(ngModel)]=\"password\"  class=\"form-control\" placeholder=\"Password\">\n        <button class=\"btn btn-primary\" (click)=\"onClickSubmit()\" type=\"submit\">Login</button> \n        <p style=\"color:red;\">{{value}}</p>\n        <p class=\"mt-3\">Don't have an account? <a routerLink=\"/sign-up\">Sign Up</a></p>\n        <p class=\"mt-3\"><a routerLink=\"/dashboard\">Back to Dashboard</a></p>\n    </div>\n</body>\n</html>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}